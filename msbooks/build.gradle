plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'tsvetkov.daniil'
version = '1.0-SNAPSHOT'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.1"
    }
}
ext {
    jerseyVersion = '4.0.0-M2' // Фиксируем версию Jersey, совместимую с Camunda 7.23.0-alpha4
}
dependencies {
    //Compile
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    //Spring
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:7.23.0-alpha4')
    implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-external-task-client:7.15.0'
    //implementation('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:7.23.0-alpha4')
    //implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:7.23.0-alpha4'
    //implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-external-task-client:7.23.0-alpha4'


    implementation 'org.aspectj:aspectjweaver:1.9.22.1'
    implementation 'com.h2database:h2:2.3.232'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    //Logging
    implementation 'org.slf4j:slf4j-api'

    implementation(project(":common"))

    //Test
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:4.0.0-M1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}
test {
    useJUnitPlatform()
}